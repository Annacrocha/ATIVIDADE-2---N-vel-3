#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#define MAX 100 

typedef struct {
    int data[MAX];
    int front;
    int rear;
} Queue;

void initializeQueue(Queue* q) {
    q->front = -1;
    q->rear = -1;
}

int isEmpty(Queue* q) {
    return q->front == -1;
}

int isFull(Queue* q) {
    return q->rear == MAX - 1;
}

void enqueue(Queue* q, int value) {
	setlocale(LC_ALL, "portuguese");
    if (isFull(q)) {
        printf("Fila cheia! Não é possível enfileirar %d.\n", value);
        return;
    }
    if (isEmpty(q)) {
        q->front = 0;
    }
    q->data[++q->rear] = value;
    printf("%d enfileirado com sucesso.\n", value);
}

int dequeue(Queue* q) {
    if (isEmpty(q)) {
        printf("Fila vazia! Não é possível desenfileirar.\n");
        return -1;
    }
    int value = q->data[q->front];
    if (q->front >= q->rear) {
        q->front = q->rear = -1;
    } else {
        q->front++;
    }
    return value;
}

void displayQueue(Queue* q) {
    if (isEmpty(q)) {
        printf("Fila vazia.\n");
        return;
    }
    printf("Elementos da fila: ");
    for (int i = q->front; i <= q->rear; i++) {
        printf("%d ", q->data[i]);
    }
    printf("\n");
}

int main() {
    Queue q;
    initializeQueue(&q);

    enqueue(&q, 10);
    enqueue(&q, 20);
    enqueue(&q, 30);
    displayQueue(&q);

    printf("%d desenfileirado.\n", dequeue(&q));
    displayQueue(&q);

    return 0;
}
